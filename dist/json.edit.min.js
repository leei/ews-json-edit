!function(){"use strict";angular.module("mx.json.edit",[]),angular.module("mx.json.edit").component("watchers",{template:'<button class="btn btn-default btn-sm" ng-click="$ctrl.recount()">{{$ctrl.watchers}} recount</button>',controller:function(){function a(b){angular.forEach(["$scope","$isolateScope"],function(a){if(b.data()&&b.data().hasOwnProperty(a)){var d=b.data()[a],e={};d.$$watchers&&angular.forEach(d,function(a,b){b.indexOf("$")===-1&&(e[b]=a)}),angular.forEach(d.$$watchers,function(a){c.push(a)})}}),angular.forEach(b.children(),function(b){a(angular.element(b))})}function b(){c=[],d=[],a(angular.element(document.getElementsByTagName("html"))),angular.forEach(c,function(a){d.indexOf(a)<0&&d.push(a)}),this.watchers=d.length}var c=[],d=[];this.recount=b}}),angular.module("mx.json.edit").directive("json",["$compile","mxJsonEdit",function(a,b){return{restrict:"E",scope:{child:"=",type:"@",collapsed:"=?"},link:function(c,d,e){c.stringName="Text",c.objectName="{}",c.arrayName="[]",c.refName="Reference",c.boolName="Boolean",c.numberName="Number",c.data={keyName:"",valueName:"",valueType:c.stringName,showAddKey:!1},c.valueTypes=[c.stringName,c.objectName,c.arrayName,c.refName,c.boolName,c.numberName],c.getType=b.getType,c.possibleNumber=b.possibleNumber,c.moveKey=b.moveKey,c.deleteKey=b.deleteKey,c.addItem=function(a){if("Object"===c.getType(a))if(void 0===c.data.keyName||0===c.data.keyName.length)alert("Please fill in a name");else if(0===c.data.keyName.indexOf("$"))alert("The name may not start with $ (the dollar sign)");else if(0===c.data.keyName.indexOf("_"))alert("The name may not start with _ (the underscore)");else{if(a[c.data.keyName]&&!confirm('An item with the name "'+c.data.keyName+'" exists already. Do you really want to replace it?'))return;if(c.data.valueType===c.numberName&&!b.isNumber(c.data.valueName))return void alert("Please fill in a number");switch(c.data.valueType){case c.stringName:a[c.data.keyName]=c.data.valueName?c.data.valueName:"";break;case c.numberName:a[c.data.keyName]=c.possibleNumber(c.data.valueName);break;case c.objectName:a[c.data.keyName]={};break;case c.arrayName:a[c.data.keyName]=[];break;case c.refName:a[c.data.keyName]={"Reference!!!!":"todo"};break;case c.boolName:a[c.data.keyName]=!1}c.data.keyName="",c.data.valueName="",c.data.showAddKey=!1}else if("Array"===c.getType(a)){if(c.data.valueType===c.numberName&&!b.isNumber(c.data.valueName))return void alert("Please fill in a number");switch(c.data.valueType){case c.stringName:a.push(c.data.valueName?c.data.valueName:"");break;case c.numberName:a.push(c.possibleNumber(c.data.valueName));break;case c.objectName:a.push({});break;case c.arrayName:a.push([]);break;case c.boolName:a.push(!1);break;case c.refName:a.push({"Reference!!!!":"todo"})}c.data.valueName="",c.data.showAddKey=!1}};var f='<i ng-click="collapsed = !collapsed" class="glyphicon" ng-class="{\'glyphicon-chevron-down\': !collapsed, \'glyphicon-chevron-right\': collapsed}"></i><i ng-if="!data.showAddKey" ng-click="data.showAddKey = true" class="glyphicon glyphicon-plus"></i><span>{{::(type === \'object\') ? objectName : \'\'}}{{::(type === \'array\') ? arrayName : \'\'}}</span><div class="jsonContents" ng-hide="collapsed"><ol class="arrayOl"><li ng-if="data.showAddKey"><input ng-show="::type === \'object\'" placeholder="Name" type="text" class="form-control input-sm" ng-model="data.keyName" /> <select ng-model="data.valueType" ng-options="option for option in valueTypes" class="form-control input-sm"></select><span ng-show="data.valueType == stringName || data.valueType == numberName"> : <input type="text" placeholder="Value" class="form-control input-sm" ng-model="data.valueName"/></span> <button type="button" class="btn btn-primary btn-sm" ng-click="addItem(child)">Add</button> <button type="button" class="btn btn-default btn-sm" ng-click="data.showAddKey=false">Cancel</button></li><li ng-repeat="(key, val) in child track by key"><input ng-if="::type === \'object\'" class="form-control input-sm" type="text" ng-model="newkey" ng-init="newkey=key" ng-blur="moveKey(child, key, newkey)"/><i class="deleteKeyBtn glyphicon glyphicon-trash" ng-click="deleteKey(child, key)"></i><span ng-switch on="getType(val)" ><json ng-switch-when="Object" child="val" type="object" collapsed="collapsed"></json><json ng-switch-when="Array" child="val" type="array" collapsed="collapsed"></json><span ng-switch-when="Boolean" type="boolean"><input type="checkbox" ng-model="val" ng-change="child[key] = val"></span><span ng-switch-when="Number" type="number"><input class="form-control input-sm" type="text" ng-model="val" placeholder="0" ng-change="child[key] = possibleNumber(val)"/></span><span ng-switch-default><input class="form-control input-sm" type="text" ng-model="val" placeholder="Empty" ng-change="child[key] = val"/></span></span></li></ol></div>';"array"!==c.type&&"object"!==c.type;var g=angular.element(f);a(g)(c),d.replaceWith(g)}}}]),angular.module("mx.json.edit").factory("mxJsonEdit",function(){return{getType:function(a){var b=Object.prototype.toString.call(a);return"[object Object]"===b?"Object":"[object Array]"===b?"Array":"[object Boolean]"===b?"Boolean":"[object Number]"===b?"Number":"Literal"},isNumber:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},possibleNumber:function(a){return this.isNumber(a)?parseFloat(a):a},moveKey:function(a,b,c){b!==c&&(a[c]=a[b],delete a[b])},deleteKey:function(a,b){"Object"===this.getType(a)?confirm('Delete "'+b+'" and all it contains?')&&delete a[b]:"Array"===this.getType(a)&&confirm('Delete "'+a[b]+'"?')&&a.splice(b,1)}}}),angular.module("mx/template/jsonedit/index.html",[]).run(["$templateCache",function(a){a.put("mx/template/jsonedit/index.html","")}])}();