!function(){"use strict";angular.module("json-edit",["mx/template/jsonedit/index.html"]),angular.module("json-edit").directive("jsonEdit",["$compile","mxJsonEdit","$templateCache",function(a,b,c){return{restrict:"AE",scope:{child:"=",type:"@",collapsed:"=?"},link:function(d,e,f){d.data={keyName:"",valueName:"",valueType:"Text",showAddKey:!1,collapsed:d.collapsed,stringName:"Text",objectName:"{}",arrayName:"[]",boolName:"Boolean",numberName:"Number"},d.valueTypes=[d.data.stringName,d.data.objectName,d.data.arrayName,d.data.boolName,d.data.numberName],d.getType=b.getType,d.possibleNumber=b.possibleNumber,d.moveKey=b.moveKey,d.deleteKey=b.deleteKey,d.addItem=b.addItem,"array"!==d.type&&"object"!==d.type;var g=angular.element(c.get("mx/template/jsonedit/index.html"));a(g)(d),e.replaceWith(g)}}}]),angular.module("json-edit").factory("mxJsonEdit",function(){function a(a){var b=Object.prototype.toString.call(a);return"[object Object]"===b?"Object":"[object Array]"===b?"Array":"[object Boolean]"===b?"Boolean":"[object Number]"===b?"Number":"Literal"}function b(a){return!isNaN(parseFloat(a))&&isFinite(a)}function c(a){return b(a)?parseFloat(a):a}function d(a,b,c){b!==c&&(a[c]=a[b],delete a[b])}function e(b,c){"Object"===a(b)?confirm('Delete "'+c+'" and all it contains?')&&delete b[c]:"Array"===a(b)&&confirm('Delete "'+b[c]+'"?')&&b.splice(c,1)}function f(d,e){if("Object"===a(d))if(void 0===e.keyName||0===e.keyName.length)alert("Please fill in a name");else if(0===e.keyName.indexOf("$"))alert("The name may not start with $ (the dollar sign)");else if(0===e.keyName.indexOf("_"))alert("The name may not start with _ (the underscore)");else{if(d[e.keyName]&&!confirm('An item with the name "'+e.keyName+'" exists already. Do you really want to replace it?'))return;if(e.valueType===e.numberName&&!b(e.valueName))return void alert("Please fill in a number");switch(e.valueType){case e.stringName:d[e.keyName]=e.valueName?e.valueName:"";break;case e.numberName:d[e.keyName]=c(e.valueName);break;case e.objectName:d[e.keyName]={};break;case e.arrayName:d[e.keyName]=[];break;case e.boolName:d[e.keyName]=!1}e.keyName="",e.valueName="",e.showAddKey=!1}else if("Array"===a(d)){if(e.valueType===e.numberName&&!b(e.valueName))return void alert("Please fill in a number");switch(e.valueType){case e.stringName:d.push(e.valueName?e.valueName:"");break;case e.numberName:d.push(c(e.valueName));break;case e.objectName:d.push({});break;case e.arrayName:d.push([]);break;case e.boolName:d.push(!1)}e.valueName="",e.showAddKey=!1}}var g={getType:a,possibleNumber:c,moveKey:d,deleteKey:e,addItem:f};return g}),angular.module("mx/template/jsonedit/index.html",[]).run(["$templateCache",function(a){a.put("mx/template/jsonedit/index.html",'<span class="json-info">\n    <i ng-click="data.collapsed = !data.collapsed" class="glyphicon json-collapsed"\n      ng-class="{\'glyphicon-chevron-down\': !data.collapsed, \'glyphicon-chevron-right\': data.collapsed}"></i>\n    <i ng-if="!data.showAddKey" ng-click="data.collapsed = false; data.showAddKey = true" class="glyphicon glyphicon-plus json-plus"></i>\n    <span>{{::(type === \'object\') ? data.objectName : \'\'}}{{::(type === \'array\') ? data.arrayName : \'\'}}</span>\n</span>\n<div ng-if="data.showAddKey && !data.collapsed">\n    <input ng-if="::type === \'object\'" placeholder="Name" type="text"\n           class="form-control input-sm" ng-model="data.keyName"/>\n    <select ng-model="data.valueType" ng-options="option for option in ::valueTypes" class="form-control input-sm"\n    ></select>\n    <span ng-if="data.valueType === data.stringName || data.valueType == data.numberName"> :\n            <input type="text" placeholder="Value" class="form-control input-sm" ng-model="data.valueName"/>\n        </span>\n    <button type="button" class="btn btn-primary btn-sm" ng-click="addItem(child, data)"><i class="glyphicon glyphicon-plus"></i></button>\n    <button type="button" class="btn btn-default btn-sm" ng-click="data.showAddKey=false"><i class="glyphicon glyphicon-remove"></i></button>\n</div>\n<div class="json-content" ng-if="!data.collapsed">\n    <div class="json-item" ng-repeat="(key, val) in child track by $id(key)">\n        <span class="json-info">\n            <span ng-if="::type === \'array\'">{{::key+1}}.</span>\n            <input ng-if="::type === \'object\'"\n                   class="form-control input-sm"\n                   type="text"\n                   ng-model="newkey"\n                   ng-init="newkey=key"\n                   ng-blur="moveKey(child, key, newkey)"/>\n            <i class="glyphicon glyphicon-trash json-trash" ng-click="deleteKey(child, key)"></i>\n        </span>\n        <span ng-switch="::getType(val)">\n            <span json-edit ng-switch-when="Object" child="val" type="object" collapsed="collapsed"></span>\n            <span json-edit ng-switch-when="Array" child="val" type="array" collapsed="collapsed"></span>\n            <input  ng-switch-when="Boolean" type="checkbox" ng-model="val" ng-change="child[key] = val"/>\n            <input ng-switch-when="Number" class="form-control input-sm" type="number" ng-model="val" placeholder="0" ng-change="child[key] = possibleNumber(val)"/>\n            <input ng-switch-default class="form-control input-sm" type="text" ng-model="val" placeholder="Empty" ng-change="child[key] = val"/>\n        </span>\n    </div>\n</div>\n')}])}();